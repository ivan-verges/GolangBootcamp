version: "3.8"
name: Final
services:
  #Users Micro-Service
  users:
    build:
      context: .
      dockerfile: users/Dockerfile
    restart: always
    container_name: Users
    ports:
      - "8001:8001"
      - "9001:9001"
    expose:
      - '8001'
      - '9001'
    depends_on:
      - mysql
      - redis
    links:
      - mysql
      - redis
    networks:
      - netmysql
      - netredis
    volumes:
      - users:/home/users
  
  #Questions Micro-Service
  questions:
    build:
      context: .
      dockerfile: questions/Dockerfile
    restart: always
    container_name: Questions
    ports:
      - "8002:8002"
      - "9002:9002"
    expose:
      - '8002'
      - '9002'
    depends_on:
      - mysql
      - redis
    links:
      - mysql
      - redis
    networks:
      - netmysql
      - netredis
    volumes:
      - questions:/home/questions
  
  #Answers Micro-Service
  answers:
    build:
      context: .
      dockerfile: answers/Dockerfile
    restart: always
    container_name: Answers
    ports:
      - "8003:8003"
      - "9003:9003"
    expose:
      - '8003'
      - '9003'
    depends_on:
      - mysql
      - redis
    links:
      - mysql
      - redis
    networks:
      - netmysql
      - netredis
    volumes:
      - answers:/home/answers
  
  #Redis Database
  redis:
    image: redis:bullseye
    restart: always
    container_name: Redis
    ports:
      - '6379:6379'
    expose:
      - '6379'
    networks:
      - netredis
    command: redis-server --save 30 1 --loglevel warning --requirepass "24071b57a13027c01339027dcccb98218f052a8f"
    volumes:
      - redisdb:/data
  
  #MySQL Database
  mysql:
    image: mysql:latest
    restart: always
    container_name: MySQL
    environment:
      MYSQL_DATABASE: 'microservices'
      MYSQL_USER: 'mysqluser'
      MYSQL_PASSWORD: 'MyP4ssw0rd'
      MYSQL_ROOT_PASSWORD: 'root_pass'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    networks:
      - netmysql
    volumes:
      - mysqldb:/var/lib/mysql

volumes:
  users:
  questions:
  answers:
  redisdb:
  mysqldb:

networks:
  netmysql:
  netredis: